-- 6798698437
if game.Players.LocalPlayer.Character.Reanimate:FindFirstChild("ScriptRunDetector") then
   	game.StarterGui:SetCore("ChatMakeSystemMessage", {
		Text = "Project: Cat - A Script Is Running! Reset to change scripts.",
		Color = Color3.fromRGB(255,255, 255),
		TextSize = 18,
	});
   return
end
local ScriptRunDetector = Instance.new("Part",game.Players.LocalPlayer.Character.Reanimate)
ScriptRunDetector.Transparency = 1
ScriptRunDetector.Name = "ScriptRunDetector"
ScriptRunDetector.CanCollide = false
ScriptRunDetector.Anchored = true

if game.Players.LocalPlayer.Character:FindFirstChild("MARTILLO").Handle:FindFirstChild("AccessoryWeld") then
game.Players.LocalPlayer.Character["MARTILLO"].Handle:FindFirstChild("AccessoryWeld"):Destroy()
end

if game.Players.LocalPlayer.Character:FindFirstChild("MARTILLO") then

else
   	game.StarterGui:SetCore("ChatMakeSystemMessage", {
		Text = "Project: Cat - You are missing hat! [MARTILLO]",
		Color = Color3.fromRGB(255,255, 255),
		TextSize = 18,
	});
	return
end

if _G.BotReanimated == true then
    local HatName = "Torso" 
    local Char = game:GetService("Players").LocalPlayer.Character or game:GetService("Players").LocalPlayer.CharacterAdded:wait()
    HatName = Char:FindFirstChild(HatName)
    
    wait(0.2)
        local bp = Instance.new("BodyPosition",HatName)
        bp.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
        bp.P = 10000
        bp.D = 125
        bp.Position = game.Players.LocalPlayer:GetMouse().Hit.p     
        local bt = Instance.new("BodyThrust",HatName)
        bt.Force = Vector3.new(3000,3000,3000)
        bt.Location = Vector3.new(10,5,-10)
        local hatpos = game.Players.LocalPlayer:GetMouse().Hit.p
        while true do
            for _=1,2 do
                game:GetService("RunService").RenderStepped:wait()
            end
            if not HatName or HatName.Parent ~= workspace then break end
            HatName.CanCollide = false
        end
    local mouse = game.Players.LocalPlayer:GetMouse()
    lolyes = false
    mouse.Button1Down:Connect(function()
        lolyes = true
    end)
    
    mouse.Button1Up:Connect(function()
        lolyes = false
    end)
    local askl = game.Players.LocalPlayer.Character:FindFirstChild("Reanimate")
    local askl2 = askl:FindFirstChild("MARTILLO").Handle
    spawn(function() while wait() do
        bp.Position = askl2.Position
    end end)
    
    HatName.Transparency = 0
    local Outline = Instance.new("SelectionBox", HatName)
    
    Outline.LineThickness = 0.08
    game:GetService("RunService").Heartbeat:Connect(function()
    local t = 5
    local hue = tick() % t / t
    Outline.Color3 = Color3.fromHSV(hue, 1, 1)
    end)
    Outline.Adornee = HatName
    
    Char["Right Arm"]:BreakJoints()
    Char["Right Leg"]:BreakJoints()
    Char["Left Arm"]:BreakJoints()
    Char["Left Leg"]:BreakJoints()
end

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

if _G.PermamentDeath == true then
local player = game.Players.LocalPlayer
local hrp = player.Character:FindFirstChild("HumanoidRootPart")
local pos = player.Character.Reanimate["MARTILLO"].Handle
hrp.Transparency = 0
hrp.BrickColor = BrickColor.new("0,255,0")
if hrp:FindFirstChildOfClass("AlignPosition") then hrp:FindFirstChildOfClass("AlignPosition"):Destroy() end
if hrp:FindFirstChildOfClass("AlignOrientation") then hrp:FindFirstChildOfClass("AlignOrientation"):Destroy() end
local BAV = Instance.new("BodyAngularVelocity",hrp)
BAV.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
BAV.P = 1000000000000000000000000000
BAV.AngularVelocity = Vector3.new(2500,2500,2500)

spawn(function()
while wait() do
    hrp.Position = pos.Position
end
end)
end


speed = 1
sine = 1
srv = game:GetService('RunService')
local attackphase1 = false
local attackphase2 = false
local pplla = game.Players.LocalPlayer
Mouse = pplla:GetMouse()
reanim = game.Players.LocalPlayer.Character.Reanimate
reanim.Animate.Disabled = true
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(-0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MARTILLO'].Handle.AccessoryWeld.Part1 = reanim['Right Arm']
reanim['MARTILLO'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)
secretAttack = false
cooldown = false


local T = reanim.Torso
local Sound = Instance.new("Sound", T)
Sound.SoundId = "rbxassetid://6798698437"
Sound.Playing = false

Mouse.Button1Down:connect(function()
if cooldown == false then
    attackphase1 = true
    wait(.3)
    attackphase2 = true
    Sound.Playing = true
    wait(.6)
    attackphase1 = false
    attackphase2 = false
    cooldown = true
            Sound:Stop()
    wait(1)
    cooldown = false
end
end)



coroutine.wrap(function()
while true do -- anim changer
if HumanDied then break end
sine = sine + speed
if Root.Velocity.y > 1 and attackphase1 == false and attackphase2 == false and secretAttack == false then -- jump
    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(5+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),.5+.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+1*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(12+0*math.cos(sine/13))),.1)
    LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-2+0.4*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(-8+0*math.cos(sine/13))),.1)
    RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13))),.1)
    LH.C0 = LH.C0:Lerp(CF(-.4+0*math.cos(sine/13),-0.4+.05*math.cos(sine/13),-0.4+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)
elseif Root.Velocity.y < -1 and attackphase1 == false and attackphase2 == false and secretAttack == false then -- fall
    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-6+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),.5+.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+1*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(32+0*math.cos(sine/13))),.1)
    LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-2+.4*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(-28+0*math.cos(sine/13))),.1)
    RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
    LH.C0 = LH.C0:Lerp(CF(-.4+0*math.cos(sine/13),-0.6+.05*math.cos(sine/13),-0.3+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)
    
elseif Root.Velocity.Magnitude < 2 and attackphase1 == false and attackphase2 == false and secretAttack == false then -- idle
    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),.5+.03*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+5*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)
    
elseif Root.Velocity.Magnitude < 20 and attackphase1 == false and attackphase2 == false and secretAttack == false then -- walk
    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),.5+.03*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+5*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+22*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-22*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)
    
elseif Root.Velocity.Magnitude > 20 and attackphase1 == false and attackphase2 == false and secretAttack == false then -- run
--run clerp here

elseif Root.Velocity.Magnitude < 2 and attackphase1 == true and attackphase2 == false and secretAttack == false then

    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),1+0.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-22+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(217+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.1)
    LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-2+.4*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(-28+0*math.cos(sine/13))),.1)
    RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
    LH.C0 = LH.C0:Lerp(CF(-.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)

elseif Root.Velocity.Magnitude < 2 and attackphase1 == true and attackphase2 == true and secretAttack == false then
    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-77+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(88+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-2+.4*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(-28+0*math.cos(sine/13))),.1)
RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(41+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(-.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(54+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)


elseif Root.Velocity.y > 1 and attackphase1 == true and attackphase2 == false and secretAttack == false then

    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),1+0.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-22+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(217+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.1)
    LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-2+.4*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(-28+0*math.cos(sine/13))),.1)
    RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
    LH.C0 = LH.C0:Lerp(CF(-.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)

elseif Root.Velocity.y > 1 and attackphase1 == true and attackphase2 == true and secretAttack == false then
    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-77+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(88+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-2+.4*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(-28+0*math.cos(sine/13))),.1)
RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(41+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(-.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(54+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)




elseif Root.Velocity.Magnitude < 20 and attackphase1 == true and attackphase2 == false and secretAttack == false then

    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),1+0.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-22+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(217+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.1)
    LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-2+.4*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(-28+0*math.cos(sine/13))),.1)
    RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
    LH.C0 = LH.C0:Lerp(CF(-.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)

elseif Root.Velocity.Magnitude < 20 and attackphase1 == true and attackphase2 == true and secretAttack == false then
    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-77+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(88+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-2+.4*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(-28+0*math.cos(sine/13))),.1)
RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(41+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(-.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(54+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)



elseif Root.Velocity.y < -1 and attackphase1 == true and attackphase2 == false and secretAttack == false then

    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),1+0.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-22+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(217+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.1)
    LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-2+.4*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(-28+0*math.cos(sine/13))),.1)
    RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
    LH.C0 = LH.C0:Lerp(CF(-.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
    reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)

elseif Root.Velocity.y < -1 and attackphase1 == true and attackphase2 == true and secretAttack == false then
    NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-77+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+.04*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(88+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-2+.4*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(-28+0*math.cos(sine/13))),.1)
RH.C0 = RH.C0:Lerp(CF(.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(41+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(-.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(54+0*math.cos(sine/45)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
reanim['MARTILLO'].Handle.AccessoryWeld.C0 = reanim['MARTILLO'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-2+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+-0*math.cos(sine/13))),.1)

end
srv.RenderStepped:Wait()
end
end)()
--Created using Nexo Animator
